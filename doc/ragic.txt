Ragic is great. Let's replace all the Clarity stuff with Ragic. Yay!

1) Sample sheet fetch can be replaced with samplesheet_from_ragic.py.

I'll worry about how to get the sample sheets to the MiSeq later. It will probably
require me running a little thingy on egcloud.bio.

Sample sheet fetch is gooooooo!

2) Get the project name from Ragic too. Easy.

in summarize_lane_contents.py I was importing (line 570):
from illuminatus.RTQuery import get_project_names

so now I'll make an equivalent function in illuminatus.ragic

Done. And now you just do from "illuminatus import get_project_names" so that
summarize_lane_contents.py does not care from whence it gets the names.

Probably all the logic of having the project names as an env var should be busted out
here too, but I'll not worry about that today.

3) Push the run ID back into Ragic. Fairly easy.

I'll re-do clarity_run_id_setter.py. For this to operate we will need to set USE_RAGIC=yes
and WRITE_TO_RAGIC=yes

---

OK, that all went smoothly. I'll split out my Ragic client into a separate thing soon.
Now let's:

1) Implement the revcomp logic
2) Test the whole thing on the MiSeq run
3) Look at spreadsheet import (and thus do a much larger project)
4) Look at auto_redo.sh

4 is going to be a bit of work. I think that since there is now no explicit "generate sample sheet"
step we want to ectually have a "re-run" button in Ragic. Then we want to be able to ask Ragic
"which runs have a re-run flag set" and also allow the pipeline to clear off the flag as it goes.
Not too hard to implement. Not a big priority.
