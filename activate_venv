#!/bin/bash

# Bootstrap a new VEnv in ./_py3_venv suitable for running Illuminatus.
# This should probably be re-done as setup.py with proper deployment etc.
# Just now we're running Illuminatus off the default python3 but a custom VEnv
# seems much more sensible, for production and testing!

# After running this once in the workspace, I can do, eg.:
# ( cd ../genologics && python3 ./setup.py develop )
# and now I can tinker with the genologics code from my GIT checkout
# without impacting the system shared Python.

if [[ "$0" == "$BASH_SOURCE" ]] ; then
    echo "You need to source this file, not run it."
    exit 1
fi

if [ -e ./_py3_venv/bin/activate ] ; then
    source ./_py3_venv/bin/activate
else
    echo "Bootstrapping new VEnv from `which python3`"
    ( set -e ; #)
    python3 -mvenv ./_py3_venv
    source ./_py3_venv/bin/activate

    pip3 install --upgrade pip
    pip3 install Rt
    pip3 install genologics
    pip3 install psycopg2

    # My own MultiQC and MultiQC_EdGen. Pip installs directly from GIT so
    # why not? Assume the master branch is always good, since it's simpler than
    # searching for the last release tag (though that is possible).
    # see https://pip.pypa.io/en/stable/reference/pip_install/#vcs-support
    pip3 install 'git+https://github.com/EdinburghGenomics/MultiQC.git#egg=multiqc'
    pip3 install 'git+ssh://git@gitlab.genepool.private/production-team/MultiQC_EdGen.git#egg=multiqc_edgen'
    ) ; [ $? = 0 ] || echo "Provisioning VEnv Failed!"
fi
